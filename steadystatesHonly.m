%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%Begin steadystates.m%This file solves the system of equations when they are set to 0%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%Model Variables:%T-tumor%V-vasculature quality%Equations: %        dT/dt = g_T*T%        dV/dt = g_V*(T - V) - u_V*V*T%g_T = T growth rate%g_V = V growth rate%u_V  = V damage by T%2 equations and 3 total parameters%''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''%Initializing workspace clear all; close all; format long; set(0,'DefaultAxesFontName', 'Arial') set(0,'DefaultAxesFontSize', 14) %''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''%Defining parameters and their values  %Controlparams = [0.12 0.36 3.28]; %E0771 controlparams = [-0.12 0.07 3.28]; %E0771 treated% params = [0.18 0.00 1.76]; %MC38 control% params = [0.11 0.35 1.76]; %MC38 responders% params = [0.21 0.05 1.76]; %MC38 nonresponders g_T = params(1); g_V = params(2); u_V = params(3); syms T VFs = [g_T*T == 0, ...      g_V*(T - V) - u_V*V*T == 0];solve(Fs)[t,v] = solve(Fs);NumberOfSolutions = size(t,1)[rows,cols] = find(imag([t,v])~=0);b = unique(rows);t(b) = []; v(b) = [];[rows,cols] = find([t,v]<0);a = unique(rows);t(a) = []; v(a) = [];NumberOfBiologicalSolutions = NumberOfSolutions - size(b,2)disp('The solutions are [t,v] = ')eval([t,v])syms T VF = [g_T*T, ...     g_V*(T - V) - u_V*V*T];disp('The Jacobian is ')J = jacobian(F,[T,V])for jj = 1:size(t,1)    clear T V    Jeval = zeros(size(J));    T = t(jj); V = v(jj);    for ii = 1:numel(J)        Jeval(ii) = eval(J(ii));    end     jj    eig(Jeval)end  %~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%end of file